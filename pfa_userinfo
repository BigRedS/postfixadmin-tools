#! /usr/bin/perl

use strict;
use Mail::Postfixadmin;


my $v = Mail::Postfixadmin->new();
my $user = $ARGV[0];
if ( $user eq '' ){
	print "Error: I need a user\n";
	exit 1;
}

## If the username doesn't contain an '@' it's a 
## domain name, so we'll print all the users:
#if ( $user !~ /\@/ ){
#	if ($v->domainIsAlias($domain)){
#		$domain = $v->getAliasDomainTarget($domain);
#	}
#	foreach( $v->getUsers($domain) ){
#		print "$_\n";
#	}
#	exit 0;
#}
#
unless( $v->userExists($user) ){
	print "$user doesn't exist\n";
	exit 1;
}

# Handle aliases gracefully:
my $olduser;
if( $v->userIsAlias($user) ){
	my $target = $v->getAliasUserTarget($user);
	if ($target =~ /,/){
		print "$user is an alias for:\n";
		foreach(split(/,\s*/, $target)){
			print $_."\n";
		}
		exit 1;
	}else{
		print "$user is an alias for $target";
		$olduser = $user;
		$user = $target;
	}
	if ($v->userExists($user)){
		print "\n";
	}else{
		print " which is not configured on this system\n";
	}
}

# To avoid confusion post the alias dealings, we'll reset our idea
# of the user
$user =~ /@(.+)$/;
my $domain = $1;
if ( $v->domainIsAlias($domain) ){
	my $targetDomain = $v->getAliasDomainTarget($domain);
	$user =~ s/$domain/$targetDomain/;
}

my %info = $v->getUserInfo($user);
print Dumper(%info);
foreach( sort(keys(%info)) ){
	unless($_ =~ /^mailboxes$/){
		printf('%-14s%s', $_, $info{$_});
		print "\n";
	}
}


=pod

=head1 NAME

vuserinfo - get information about a user

=head1 DESCRIPTION

This is part of Avi's collection of scripts to emulate vpopmail's 
scripts on a Postfix/MySQL system. 

Any feature-parity is purely coincidental.

=head1 SYNOPSIS

vuserinfo user@domain.com

=head1 OPTIONS

No.

=head1 EXAMPLES

View the details of user@example.net:
  vuserinfo example.net

=head1 EXIT STATUS

Exits 0 on success, non-zero on failure. Useful error messages are used 
as a poor substitute for sensible exit statuses.

=head1 AUTHOR

Avi wrote this.

http://avi.co

http://github.com/BigRedS/vpostmail

