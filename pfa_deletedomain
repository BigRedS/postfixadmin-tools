#! /usr/bin/perl

use Mail::Postfixadmin;
use strict;
use Getopt::Std;
my %opt;
my $domain = pop;
getopts('hU', \%opt);

if(exists($opt{h})){
        print usage();
        exit 0; 
}

if ($domain eq '' || $domain =~ /^-\w$/ || exists($opt{h})){
	print usage();
	exit 1;
}

my $pfa = Mail::Postfixadmin->new();

if ($pfa->domainExists($domain)){
	if($pfa->domainIsAlias($domain)){
		$pfa->removeAliasDomain($domain);
	}else{
		unless(exists($opt{U})){
			foreach($pfa->getUsers($domain)){
				print "removing $_ ";
				if($pfa->removeUser($_)){
					print "done\n"
				}else{
					print "ERROR: $pfa->{errstr}\n";
				}
			}
		}
	}
	print "removing domain $domain ";
	$pfa->removeDomain($domain);
}else{
	print STDERR "Domain $domain not found\n";
	exit 1
}

if ($pfa->domainExists($domain)){
	print STDERR "Error: I deleted it, but it's still there\n";
	exit 1;
}else{
	print "done\n";
}
exit 0;

sub usage {

return <<EOF;
vdeldomain

Deletes a domain from the mail system.

Usage:

  vdeldomain [options] <domain>

Options:

  -U   also delete all the users
Returns 0 on success, 1 on any sort of failure.
EOF
}



=pod

=head1 NAME

vdeldomain - remove a domain from the mail system

=head1 DESCRIPTION

This is part of Avi's collection of scripts to emulate vpopmail's 
scripts on a Postfix/MySQL system. 

Any feature-parity is purely coincidental.

=head1 SYNOPSIS

vdeldomain [options] <domain>

=head1 OPTIONS

   -U   Also delete the users associated with the domain (and their mailboxes). Note
        that the default is to be non-destructive rather than non-surprising.

=head1 EXAMPLES

Delete example.net and all its users:
   vdeldomain -U example.net

=head1 EXIT STATUS

Exits 0 on success, non-zero on failure. Useful error messages are used 
as a poor substitute for sensible exit statuses.

=head1 AUTHOR

Avi wrote this.

http://avi.co

http://github.com/BigRedS/vpostmail



