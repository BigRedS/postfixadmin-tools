#! /usr/bin/perl

use strict;
use Mail::Postfixadmin;
use Getopt::Std;
my %opt;
getopts('lh', \%opt);

my $domain = pop;#
if( exists($opt{h}) ){
	print usage();
	exit 0;
}

my $pfa = Mail::Postfixadmin->new();

if ( $domain eq '' ){
	foreach my $domain ( $pfa->getDomains ){
		if ( $pfa->domainIsAlias($domain) ){
			my $target = $pfa->getAliasDomainTarget($domain);
			print "$domain\t(alias for $target)\n";
		}else{
			print "$domain\n";
		}
	}
	exit 0;
}

my %info;
if ( $pfa->domainExists($domain) ){
	if ( $pfa->domainIsAlias($domain) ){
		$info{'isalias'} = 1;
		$domain = $pfa->getAliasDomainTarget($domain);
	}
	if(exists($opt{l})){
		foreach( $pfa->getUsers($domain) ){
			print $_."\n";
		}
	}else{
		%info =(%info, $pfa->getDomainInfo($domain));
		foreach( sort( keys(%info) ) ){
			if(ref($info{$_}) =~ /^ARRAY/){
				$info{$_} = scalar @{$info{$_}};
			}
			printf('%-14s%s', $_, scalar($info{$_}));
			print "\n";
		}
	}
}else{
	print STDERR "Domain $domain not found\n";
	exit 1;
}


sub usage{
return <<EOF;
vdominfo

Usage: 
  vdominfo [options] <domain>

Prints out info on a domain. 

Options:
  -l   print a list of mailboxes rather than domain properties

EOF
}
=pod

=head1 NAME

vdominfo - get info for a domain

=head1 DESCRIPTION

This is part of Avi's collection of scripts to emulate vpopmail's 
scripts on a Postfix/MySQL system; postfixadmin-tools

=head1 SYNOPSIS

vdominfo [-l] domain.com

=head1 OPTIONS

  -l    list domain users, rather than domain properties

=head1 EXAMPLES

show properties of example.net:
 vdominfo example.net

show users of example.com:
 vdominfo -l example.com

=head1 EXIT STATUS

0: success or nothing to do
1: bad arguments
2: tried to proceed, failed somewhere

0 on success, non-zero on failure. Useful error messages are used 
as a poor substitute for sensible exit statuses.

=head1 AUTHOR

Avi wrote this.

http://avi.co

http://github.com/BigRedS/vpostmail

